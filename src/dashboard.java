import javax.swing.*;
import java.awt.*;
import javax.swing.JList;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author acer
 */
public class dashboard extends javax.swing.JFrame {
     private JList<String> notificationList;
   //  notificationList = new javax.swing.JList<>();
    /**
     * Creates new form dashboard
     */
    public dashboard() {
        initComponents();
         String[] notifications = {
        "You have a new message.",  // Notification 1
        "Your profile was updated successfully." };
        // Call displayNotifications with the actual data
        displayNotifications(notifications);
        
        // Initialize notificationList and wrap in JScrollPane
        notificationList = new javax.swing.JList<>();  // Initialize the JList
        JScrollPane scrollPane = new JScrollPane(notificationList);  // Wrap in JScrollPane
         setSize(800, 500);
        // Add the JScrollPane containing the JList to the JFrame's content pane
        getContentPane().add(scrollPane);
        
       
    }
    private void displayNotifications(String[] notifications) {
        // Check if notificationList is null, if so, initialize it
    if (notificationList == null) {
        notificationList = new JList();
    }
    
    // Now you can safely use notificationList
    notificationList.setListData(notifications);
    // Make sure the JList is refreshed and the new data is visible
        notificationList.revalidate();  // Revalidate to make sure changes are reflected
        notificationList.repaint();  // Repaint to force a UI update
    }
    private void initializeNotificationList() {
        // Initialize the notificationList (JList)
        notificationList = new javax.swing.JList<>();

        // Wrap the notificationList in a JScrollPane for scrolling functionality
        JScrollPane scrollPane = new JScrollPane(notificationList);
        
        // Optionally, set some layout constraints to position the JScrollPane properly
        scrollPane.setBounds(50, 50, 300, 200);  // Set position and size (you can adjust this as needed)

        // Add the JScrollPane (containing the notificationList) to the content pane
        getContentPane().setLayout(null);  // Set layout to null for absolute positioning
        getContentPane().add(scrollPane);  // This adds it to the JFrame's content pane
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new dashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
